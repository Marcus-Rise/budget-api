name: "Build"

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get Yarn cache directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Use Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        working-directory: app
        run: yarn install --prefer-offline --frozen-lockfile

      - name: Lint
        working-directory: app
        run: yarn lint

      - name: Test unit
        working-directory: app
        run: yarn test:cov

      - name: Collect code coverage report
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: app/coverage/lcov-report

      - name: Test e2e
        working-directory: app
        run: yarn test:e2e

      - name: Build
        working-directory: app
        run: | 
          yarn build
          yarn install --prefer-offline --frozen-lockfile --prod

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup env
        run: |
          IMAGE_NAME=$(echo ${{ github.repository }} | tr [:upper:] [:lower:])
          echo "IMAGE_NAME=ghcr.io/${IMAGE_NAME}" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: app
          cache-from: type=gha
          cache-to: type=gha,mode=max
          builder: ${{ steps.buildx.outputs.name }}
          push: true # Will only build if this is not here
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest
